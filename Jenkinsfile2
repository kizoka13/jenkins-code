pipeline{
    agent any
    
    tools{
        maven 'M2_HOME'
    }
    
    stages{
               stage('sonarqube scan'){
                  agent{docker { image 'maven:3-amazoncorretto-17-debian' }}
        steps {
            withSonarQubeEnv('sonarserver'){
            sh 'mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=kizoka13_week16-code'
            //sh 'mvn sonar:sonar'
            }
          }
        }

        
    
        stage('all maven commands'){
            steps{
                sh 'mvn clean test compile install package'
            
            }
        
        }
        stage('upload artifact'){
            steps{
                sh 'curl -uadmin:AP5iaA335pTzAyuonwEeQJR5cA2 -T\
                 target/bio*.jar\
                "http://44.211.75.18:8081/artifactory/geoapp/"'

         
            }
        }

        stage ('image build'){
            steps {
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 648693116534.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t geoapp .'
        
               }
          }
        stage('docker push'){
        steps {
            sh 'docker tag geoapp:latest 648693116534.dkr.ecr.us-east-1.amazonaws.com/geoapp:${BUILD_ID}'
            sh 'docker push 648693116534.dkr.ecr.us-east-1.amazonaws.com/geoapp:${BUILD_ID}'
                 }
              }
          }
      }
